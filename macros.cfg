[gcode_shell_command update_all_firmware]
command: sh /home/pi/printer_data/config/script/update_mcu.sh
timeout: 600
verbose: True
[gcode_macro UPDATE_FIRMWARE]
gcode:
 RUN_SHELL_COMMAND CMD=update_all_firmware


[gcode_macro LOAD_FILAMENT]
gcode:
   M83                            ; set extruder to relative
   G1 E200 F300                   ; load                    ; prime nozzle with filament
   M82                            ; set extruder to absolute
    
[gcode_macro UNLOAD_FILAMENT]
gcode:
   M83                            ; set extruder to relative
   G1 E20 F300                    ; extrude a little to soften tip
   G1 E-150 F400                  ; retract some, but not too much or it will jam
   M82                            ; set extruder to absolute

[gcode_macro PRIME_LINE]
gcode:
    {% set feedrate = params.F|default(60)|float * 60 %}
;    {% set feedrate = params.F|default(10)|float * 60 %}
    {% set length = 100.0 %}
    {% set width = printer.configfile.settings.extruder.nozzle_diameter|float %}
    {% set height = ( (width / 0.04)|int - (width / 0.04 / 4)|int )|float * 0.04 %}
    {% set extrude = length * width * height / 1.6 %}
#    SAVE_GCODE_STATE NAME=PRIME_LINE_STATE
#    SET_IDLE_TIMEOUT TIMEOUT=7200
    {% if 'Y' in params %}
        {% set x_start = 1.0 %}
        {% set y_start = (printer.toolhead.axis_maximum.y|float - 100) / 2 %}
        G0 X{x_start} Y{y_start} F24000                                          # move to start position
        G0 Z{height} F1500
        G91                                                                     # relative positioning
        G1 Y100 E{extrude} F{feedrate}                                          # draw the 1st line
        G0 X{width} F5000                                                       # move to the next line
        G1 Y-100 E{extrude} F{feedrate}                                         # draw the 2nd line
    {% else %}
        {% set x_start = (printer.toolhead.axis_maximum.x|float - 100) / 2 %}
        {% set y_start = 1.0 %}
        G0 X{x_start} Y{y_start} F24000                                          # move to start position
        G0 Z{height} F1500
        G91                                                                     # relative positioning
        G1 E4 F{feedrate}                                                       # prime
        G1 X100 E{extrude} F{feedrate}                                          # draw the 1st line
        G0 Y{width} F5000                                                       # move to the next line
        G1 X-100 E{extrude} F{feedrate}                                         # draw the 2nd line
    {% endif %}

#    RESTORE_GCODE_STATE NAME=PRIME_LINE_STATE

             ; move nozzle away from bed
                          ; relative positioning
    
[gcode_macro PRINT_START]
gcode:
    {% set bedtemp=params.BED |int%}            # Получаем температуру стола из слайсера
    {% set hotendtemp=params.EXTRUDER |int%}    # Получаем температуру хотэнда из слайсера
    G28 X Y  
    M190 S {bedtemp}                            # Включаем нагрев стола на температуру из слайсера и ждём нагрева
    Attach_Probe_Lock
    G28 Z
    Z_TILT_ADJUST
    M104 S{hotendtemp}
    BED_MESH_CALIBRATE PROFILE="default"
    Dock_Probe_Unlock
    M109 S{hotendtemp}                          # Запускаем нагрев хотэнда и не ждём окончания нагрева
    PRIME_LINE


[gcode_macro PRINT_END]
#   Use PRINT_END for the slicer ending script - please customize for your slicer of choice
gcode:
    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-4.0 F3600                 ; retract filament
    G91  
    
    #   Get Boundaries
    {% set max_x = printer.configfile.config["stepper_x"]["position_max"]|float %}
    {% set max_y = printer.configfile.config["stepper_y"]["position_max"]|float %}
    {% set max_z = printer.configfile.config["stepper_z"]["position_max"]|float %}

    #   Check end position to determine safe direction to move
    {% if printer.toolhead.position.x < (max_x - 20) %}
        {% set x_safe = 20.0 %}
    {% else %}
        {% set x_safe = -20.0 %}
    {% endif %}

    {% if printer.toolhead.position.y < (max_y - 20) %}
        {% set y_safe = 20.0 %}
    {% else %}
        {% set y_safe = -20.0 %}
    {% endif %}

    {% if printer.toolhead.position.z < (max_z - 2) %}
        {% set z_safe = 2.0 %}
    {% else %}
        {% set z_safe = max_z - printer.toolhead.position.z %}
    {% endif %}

    G0 Z{z_safe} F3600             ; move nozzle up
    G0 X{x_safe} Y{y_safe} F20000  ; move nozzle to remove stringing
    TURN_OFF_HEATERS
    M107                           ; turn off fan
    G90                            ; absolute positioning
    G0 X60 Y{max_y-10} F3600          ; park nozzle at rear
    
[gcode_macro _HOME_X]
gcode:
    # Always use consistent run_current on A/B steppers during sensorless homing
    {% set RUN_CURRENT_X = printer.configfile.settings['tmc2209 stepper_x'].run_current|float %}
    {% set RUN_CURRENT_Y = printer.configfile.settings['tmc2209 stepper_y'].run_current|float %}
    {% set HOME_CURRENT = 0.7 %}
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={HOME_CURRENT}
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={HOME_CURRENT}

    # Home
    G28 X
    # Move away
    G91
   
    
    # Wait just a second… (give StallGuard registers time to clear)
    G4 P500
    # Set current during print
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={RUN_CURRENT_X}
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={RUN_CURRENT_Y}
    G1 X-113 F5000

[gcode_macro _HOME_Y]
gcode:
    # Set current for sensorless homing
    {% set RUN_CURRENT_X = printer.configfile.settings['tmc2209 stepper_x'].run_current|float %}
    {% set RUN_CURRENT_Y = printer.configfile.settings['tmc2209 stepper_y'].run_current|float %}
    {% set HOME_CURRENT = 0.7 %}
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={HOME_CURRENT}
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={HOME_CURRENT}

    # Home
    G28 Y
    # Move away
    G91
    

    # Wait just a second… (give StallGuard registers time to clear)
    G4 P500
    # Set current during print
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={RUN_CURRENT_X}
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={RUN_CURRENT_Y}
    G1 Y-21 F5000
